{"name":"Webp-ffi","tagline":"Ruby wrapper for libwebp","body":"# Webp-ffi\r\n\r\n[![Build Status](https://travis-ci.org/le0pard/webp-ffi.png)](https://travis-ci.org/le0pard/webp-ffi) \r\n[![Code Climate](https://codeclimate.com/github/le0pard/webp-ffi.png)](https://codeclimate.com/github/le0pard/webp-ffi)\r\n\r\nRuby wrapper for libwebp. What is WebP?\r\n\r\nWebP is a new image format that provides lossless and lossy compression for images on the web. WebP lossless images are 26% smaller in size compared to PNGs. WebP lossy images are 25-34% smaller in size compared to JPEG images at equivalent SSIM index. WebP supports lossless transparency (also known as alpha channel) with just 22% additional bytes. Transparency is also supported with lossy compression and typically provides 3x smaller file sizes compared to PNG when lossy compression is acceptable for the red/green/blue color channels.\r\n\r\n## [WebP Gallery](https://developers.google.com/speed/webp/gallery)\r\n\r\n## Installation\r\n\r\n### Requirements\r\n\r\nFirst of all you should have install libraries: libpng, libjpeg and libwebp (for libwebp need libpng and libjpeg).\r\n\r\nFor ubuntu, debian:\r\n\r\n    sudo apt-get install libjpeg62-dev libpng12-dev libtiff4-dev\r\n    \r\nFor Mac OS:\r\n\r\n    sudo port install jpeg libpng tiff\r\n    \r\nor:\r\n\r\n    brew install libjpg libpng libtiff\r\n    \r\nNext, you should [install libwebp](https://developers.google.com/speed/webp/docs/compiling).\r\n\r\n### Final part\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'webp-ffi'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install webp-ffi\r\n\r\n## Usage\r\n\r\nBasic info about libwebp (encoder and decoder versions):\r\n\r\n    $ irb\r\n    2.0.0p0 :001 > require 'webp_ffi'\r\n     => true \r\n    2.0.0p0 :002 > WebpFfi.decoder_version\r\n     => \"0.2.0\" \r\n    2.0.0p0 :003 > WebpFfi.encoder_version\r\n     => \"0.2.0\"\r\n     \r\nGet size (width and height) from webp image:\r\n\r\n    filename = File.expand_path(File.join(File.dirname(__FILE__), \"spec/factories/4.webp\"))\r\n    WebpFfi.webp_size(File.open(filename, \"rb\").read)\r\n     => [2000, 2353]\r\n    \r\nDecode webp image to png:\r\n\r\n    filename = File.expand_path(File.join(File.dirname(__FILE__), \"spec/factories/4.webp\"))\r\n    out_filename = File.expand_path(File.join(File.dirname(__FILE__), \"tmp/4.png\"))\r\n    WebpFfi.decode(filename, out_filename)\r\n\r\nEncode png, jpg or tiff image to webp:\r\n\r\n    filename = File.expand_path(File.join(File.dirname(__FILE__), \"spec/factories/4.png\"))\r\n    out_filename = File.expand_path(File.join(File.dirname(__FILE__), \"tmp/4.webp\"))\r\n    WebpFfi.encode(filename, out_filename)\r\n     \r\nEncode png, jpg or tiff image to webp (with options):\r\n\r\n    WebpFfi.encode(filename, out_filename, quality: 50, resize_w: 100, resize_h: 200)\r\n    WebpFfi.encode(filename, out_filename, quality: 75, crop_x: 0, cropt_y: 0, crop_w: 100, crop_h: 100)\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}